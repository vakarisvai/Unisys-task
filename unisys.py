# -*- coding: utf-8 -*-
"""UNISYS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zK_YsEdHPFVwefnzja_qAUSM-cQe87wi
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('hierarchy.csv')

parent_folders = df.groupby(['parentReference.id'], as_index =False).sum() # Grouped parent folders with sumed sizes

not_edited = df[df['lastModifiedDateTime'] <= '2021-01-01']
not_edited =  not_edited.groupby(['parentReference.id'], as_index =False).sum() # Grouped parent folders with sumed sizes that were not edited since 2021-01-01

a = not_edited['parentReference.id']
a = a.sort_values()
a = a.to_numpy()

parent_folders = parent_folders[parent_folders['parentReference.id'].isin(a)]
parent_folders = parent_folders.reset_index()
parent_folders = parent_folders.drop(columns = 'index') # Grouped parent folders (same folders as not_edited but sizes of folders that were edited after 2021-01-01 are included) with sumed sizes

array = np.zeros(len(not_edited))
array = pd.DataFrame(array, columns = ['size'], dtype=float)
array['parentReference.id'] = not_edited['parentReference.id']
array['%'] = 0

for i in range(0, len(not_edited)):
  if not_edited['size'][i] == parent_folders['size'][i]: # If not_edited size value is equal to the value of size of parent folder, it means that all folders of parent (root) folder were not edited since 2021-01-01
    array['size'][i] = parent_folders['size'][i]

array['%'] = 100 * array['size'] / df['size'].sum()

array = array.sort_values(by = ['size'], ascending=False)

top_5 = array[['parentReference.id', '%']].head().copy()
top_5 = top_5.reset_index()
top_5 = top_5.drop(columns = 'index')


import csv  

header = ['parentReference.id', 'Ratio in %']

with open('output.csv', 'w', encoding='UTF8') as f:
    writer = csv.writer(f)

    # write the header
    writer.writerow(header)
    for i in top_5.index:
      data = top_5.iloc[i, :]
      # write the data
      writer.writerow(data)


f.close()